<Page 
    x:Name="Root"
    x:Class="SimpleApp.AppShell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SimpleApp"
    xmlns:controls="using:SimpleApp.Controls"
    xmlns:triggers="using:SimpleApp.Triggers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    KeyDown="AppShell_KeyDown"
    TabNavigation="Cycle"
    mc:Ignorable="d">

    <!-- Using a Page as the root for the app provides a design time experience as well as ensures that
         when it runs on Mobile the app content won't appear under the system's StatusBar which is visible
         by default with a transparent background.  It will also take into account the presence of software
         navigation buttons if they appear on a device.  An app can opt-out by switching to UseCoreWindow.
    -->

    <Page.Resources>
        <DataTemplate x:Key="NavMenuItemTemplate" x:DataType="local:NavMenuItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="SelectedPipe"
                           Width="6"
                           Height="24"
                           Margin="-2,0,0,0"
                           Fill="{ThemeResource SystemControlForegroundAccentBrush}"
                           Visibility="{x:Bind SelectedVis, Mode=TwoWay}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"/>
                <!-- Showing a ToolTip and the Label is redundant.  We put the ToolTip on the icon.
                     It appears when the user hovers over the icon, but not the label which provides
                     value when the SplitView is 'Compact' while reducing the likelihood of showing
                     redundant information when the label is shown.-->
                <FontIcon x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="{x:Bind Label}"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{x:Bind Label}" Style="{StaticResource BodyTextBlockStyle}" TextWrapping="NoWrap" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="NavMenuItem10ftTemplate" x:DataType="local:NavMenuItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- Showing a ToolTip on Xbox is not desirable. The SelectedPipe is also deliberately omited. -->
                <FontIcon x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{x:Bind Label}" Style="{StaticResource BodyTextBlockStyle}" TextWrapping="NoWrap" Margin="0,0,16,0"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>


    <Grid x:Name="layoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <!-- Adaptive triggers -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True"/>
                        <Setter Target="NavPaneDivider.Visibility" Value="Visible"/>
                        <Setter Target="FeedbackNavPaneButton.IsTabStop" Value="True"/>
                        <Setter Target="SettingsNavPaneButton.IsTabStop" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactOverlay"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False"/>
                        <Setter Target="NavPaneDivider.Visibility" Value="Collapsed"/>
                        <Setter Target="FeedbackNavPaneButton.IsTabStop" Value="False"/>
                        <Setter Target="SettingsNavPaneButton.IsTabStop" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False"/>
                        <Setter Target="FeedbackNavPaneButton.IsTabStop" Value="True"/>
                        <Setter Target="SettingsNavPaneButton.IsTabStop" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:IsTenFootTrigger/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.OpenPaneLength" Value="368"/>
                        <Setter Target="RootSplitView.CompactPaneLength" Value="96"/>
                        <Setter Target="PaneContentGrid.Margin" Value="0,0,0,27"/>
                        <Setter Target="NavMenuList.Margin" Value="0,79,0,0"/>
                        <Setter Target="frame.Margin" Value="0,27,48,27"/>
                        <Setter Target="NavMenuList.ItemContainerStyle" Value="{StaticResource NavMenuItemContainer10ftStyle}"/>
                        <Setter Target="NavMenuList.ItemTemplate" Value="{StaticResource NavMenuItem10ftTemplate}"/>
                        <Setter Target="FeedbackNavPaneButton.Style" Value="{StaticResource SplitViewPaneButton10ftStyle}"/>
                        <Setter Target="SettingsNavPaneButton.Style" Value="{StaticResource SplitViewPaneButton10ftStyle}"/>
                        <Setter Target="TogglePaneButton.Style" Value="{StaticResource SplitViewTogglePaneButton10ftStyle}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- Declared first for screen reader navigation order, ZIndex specified to have it rendered above everything else. -->
        <ToggleButton x:Name="TogglePaneButton"
                      Canvas.ZIndex="100"
                      TabIndex="1"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                      IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                      Unchecked="TogglePaneButton_Unchecked"
                      Checked="TogglePaneButton_Checked"
                      AutomationProperties.Name="Navigation"
                      ToolTipService.ToolTip="Navigation"/>

        <!-- Top-level navigation menu + app content -->
        <SplitView x:Name="RootSplitView"
                   DisplayMode="Inline"
                   OpenPaneLength="320"
                   PaneBackground="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                   PaneClosed="RootSplitView_PaneClosed"
                   IsTabStop="False">

            <SplitView.Pane>
                <Grid x:Name="PaneContentGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="6"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition Width="48"/>
                    </Grid.ColumnDefinitions>

                    <!-- A custom ListView to display the items in the pane.  The automation Name is set in the ContainerContentChanging event. -->
                    <controls:NavMenuListView x:Name="NavMenuList"
                                              Grid.ColumnSpan="3"
                                              TabIndex="3"
                                              Margin="0,52,0,0"
                                              ContainerContentChanging="NavMenuItemContainerContentChanging"
                                              ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                                              ItemTemplate="{StaticResource NavMenuItemTemplate}"
                                              ItemInvoked="NavMenuList_ItemInvoked"/>
                    <Rectangle x:Name="NavPaneDivider"
                               Grid.Row="1"
                               Grid.ColumnSpan="3"
                               Height="1"
                               Fill="{ThemeResource SystemControlForegroundBaseLowBrush}"
                               Margin="16,0,16,6"/>
                    <Button x:Name="FeedbackNavPaneButton"
                            Grid.Row="2"
                            Grid.Column="1"
                            Style="{StaticResource SplitViewPaneButtonStyle}"
                            Content="&#xE76E;"
                            AutomationProperties.Name="Feedback"
                            ToolTipService.ToolTip="Feedback"/>
                    <Button x:Name="SettingsNavPaneButton"
                            Grid.Row="2"
                            Grid.Column="2"
                            Style="{StaticResource SplitViewPaneButtonStyle}"
                            Content="&#xE713;"
                            AutomationProperties.Name="Settings"
                            ToolTipService.ToolTip="Settings"/>
                </Grid>
            </SplitView.Pane>

            <SplitView.Content>
                <!-- OnNavigatingToPage we synchronize the selected item in the nav menu with the current page.-->
                <Frame x:Name="frame"
                   Margin="0,4,0,0"
                   Navigating="OnNavigatingToPage">
                    <Frame.ContentTransitions>
                        <TransitionCollection>
                            <NavigationThemeTransition>
                                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                    <EntranceNavigationTransitionInfo/>
                                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                            </NavigationThemeTransition>
                        </TransitionCollection>
                    </Frame.ContentTransitions>
                </Frame>
            </SplitView.Content>
        </SplitView>
    </Grid>
</Page>
